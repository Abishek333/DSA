Remove Nth Node From End of List

Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:

Given n will always be valid.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) 
    {
    
        ListNode temp1 = head;
        ListNode curr = null;
        
        int size = 0;
        
        while(temp1 != null)
        {
            size++;
            temp1 = temp1.next;
        }
        
        if(size < n)
        {
            return null;
        }
        else if(size-n == 0)
        {
            return head.next;
        }
         ListNode temp = head;
        
        for(int i = 0 ; i < size-n ; i++)
        {
            curr = temp;
            temp = temp.next;
        }
        
        curr.next = temp.next;
        temp = null;
        
        return head;
    }
}
