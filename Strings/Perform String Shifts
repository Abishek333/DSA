Perform String Shifts

You are given a string s containing lowercase English letters, and a matrix shift, where shift[i] = [direction, amount]:

direction can be 0 (for left shift) or 1 (for right shift). 
amount is the amount by which string s is to be shifted.
A left shift by 1 means remove the first character of s and append it to the end.
Similarly, a right shift by 1 means remove the last character of s and add it to the beginning.
Return the final string after all operations.

 

Example 1:

Input: s = "abc", shift = [[0,1],[1,2]]
Output: "cab"
Explanation: 
[0,1] means shift to left by 1. "abc" -> "bca"
[1,2] means shift to right by 2. "bca" -> "cab"
Example 2:

Input: s = "abcdefg", shift = [[1,1],[1,1],[0,2],[1,3]]
Output: "efgabcd"
Explanation:  
[1,1] means shift to right by 1. "abcdefg" -> "gabcdef"
[1,1] means shift to right by 1. "gabcdef" -> "fgabcde"
[0,2] means shift to left by 2. "fgabcde" -> "abcdefg"
[1,3] means shift to right by 3. "abcdefg" -> "efgabcd"



class Solution {
    public String stringShift(String s, int[][] shift) {
        
             char [] arr = s.toCharArray();

        ArrayList<Integer> list = new ArrayList<Integer>();

        for(int x = 0 ; x < shift.length ; x++)
        {
            for(int y = 0 ; y < shift[0].length ; y++)
            {
                list.add(shift[x][y]);
            }
        }
        
        int right_f = 0;
        int left_f = 0;

        System.out.println(list);

        for(int l = 0 ; l < list.size() ; l++)
        {
           if(l % 2 != 0)
            {
                if(list.get(l-1) == 0)
                {
                    left_f += list.get(l);
                }
                else if(list.get(l-1) == 1)
                {
                    right_f += list.get(l);
                    System.out.println(right_f);
                }
            }
        }

      int right = right_f;
      int left = left_f*-1;


      int result = right+left;
        System.out.println(result);



        if(result > 0)
        {
            for(int r = 0 ; r < result ; r++)
            {
                char temp1 = arr[arr.length-1];
                int i = 0;
                for(i = arr.length-1; i > 0 ; i--)
                {
                    arr[i] = arr[i-1];
                }
                arr[i] = temp1;
            }
        }
        else if(result < 0)
        {
            for(int l = 0; l < Math.abs(result) ; l++)
            {
                char temp2 = arr[0];
                int j = 0;
                for(j = 0; j < arr.length-1 ; j++)
                {
                    arr[j] = arr[j+1];
                }
                arr[j] = temp2;
            }
        }
         String S = "";

        for(char x : arr)
        {
            S += x;
        }
        
        return S;
    }
}




