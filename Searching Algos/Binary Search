Binary Search applies to only sorted arrays

ITERATIVE IMPLEMENTATION

public static void main(String[] args)
{
int [] arr = {0,1,2,3,4,5};

int target = 2;

int left = 0;
int right = arr.length-1;

while(left <= right)
{
int middle = left + (right-left)/2;

if(arr[middle] == target)
  {
    System.out.println("Found at " + middle);
    break;
  }
else if(arr[middle] < target)    //Shift +1 to right because target is greater than middle element
  {
  left = middle + 1;
  }
else
  {
  right = middle - 1;           //Shift -1 to left because target is smaller than middle element
  }
}

}


**************************************************************************************************

RECURSIVE IMPLEMENTATION

public static void main(String[] args)
{
int [] arr = {0,1,2,3,4,5};

int target = 2;

int result = search(arr , 0 , arr.length-1 , target);

if(result == -1)
{
System.out.println("Not exists");
}
else
{
System.out.println("Exists at " + result);
}
}

int search(int [] arr , int left , int right , int target)
{

if(right >= left)
{
  int middle = left + (right-left)/2;
  
  if(arr[middle] == target)
  {
  return middle;
  }
  
  else if(arr[middle] > target)
  {
  return search(arr , l , mid-1 , target);  //Should be present between left and middle;
  }
  
  else
  {
  return search(arr , mid+1 , right , target); //Should be present between middle and right;
  }

return -1;
}
